package model.method.pso.hdpso.core;

import it.unimi.dsi.fastutil.ints.Int2IntMap;
import model.database.component.DBSchool;
import model.database.loader.DBProblemLoader;
import model.dataset.component.DSLesson;
import model.dataset.component.DSLessonCluster;
import model.dataset.component.DSLessonGroup;
import model.dataset.loader.DatasetGenerator;
import model.method.pso.hdpso.component.Particle;
import model.method.pso.hdpso.component.Position;
import model.method.pso.hdpso.component.Setting;
import org.jetbrains.annotations.NotNull;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.util.Arrays;

/**
 * Created by Muhammad Syafiq on 12/27/2016.
 * Email : Syafiq.rezpector@gmail.com
 * GitHub : Syafiqq
 */
@SuppressWarnings("Duplicates") public class TPSO_P1Test
{
    private DatasetGenerator dsLoader;
    private int[][][] data;

    @SuppressWarnings("Duplicates") @Before public void initialize()
    {
        DBSchool school = new DBSchool(1, "Program Teknologi Informasi dan Ilmu Komputer Universitas Brawijaya", "PTIIK UB", "Jl. Veteran No.8, Ketawanggede, Kec. Lowokwaru, Kota Malang, Jawa Timur", "2013 - 2014", 0, 17, 5);
        Assert.assertNotNull(school);

        DBProblemLoader dbLoader = new DBProblemLoader(school);
        Assert.assertNotNull(dbLoader);

        dbLoader.loadData();

        this.dsLoader = new DatasetGenerator(dbLoader);
        Assert.assertNotNull(dsLoader);
    }

    @Test
    public void test_InitializeParticle()
    {
        Setting setting = Setting.getInstance();
        setting.setbGlobMin(0.100);
        setting.setbGlobMax(0.400);
        setting.setbLocMin(0.600);
        setting.setbLocMax(0.900);
        setting.setbRandMin(0.001);
        setting.setbRandMax(0.100);
        setting.setMaxParticle(3);
        setting.setMaxEpoch(1);
        setting.setTotalCore(4);

        @NotNull final PSO pso = new PSO(this.dsLoader);
        Assert.assertNotNull(pso);
        pso.initialize();
        
        this.data = new int[15][][];
        for(int i = -1, is = data.length; ++i < is;)
        {
            data[i] = new int[5][];
        }
        data[0][0] = new int[]{256, 254, 733, 732, 727, 705, 741, 714, 743, 717, 707, 710, 691, 258, 253, 722, 696, 735, 737, 693, 699, 742, 723, 738, 695, 711, 251, 255, 724, 721, 728, 726, 697, 740, 730, 713, 700, 731, 719, 249, 250, 712, 720, 706, 694, 702, 744, 703, 739, 734, 692, 716, 257, 252, 736, 704, 729, 715, 708, 725, 701, 709, 718, 698};
        data[0][1] = new int[]{584, 646, 546, 652, 650, 585, 792, 795, 787, 549, 644, 685, 648, 686, 583, 793, 783, 791, 545, 547, 647, 582, 797, 785, 788, 780, 784, 798, 781, 649, 587, 690, 651, 586, 688, 796, 790, 794, 548, 645, 789, 687, 643, 689, 782, 779, 786};
        data[0][2] = new int[]{578, 581, 842, 819, 817, 833, 823, 831, 852, 824, 848, 814, 802, 855, 828, 850, 825, 809, 810, 836, 815, 806, 835, 854, 818, 830, 816, 812, 580, 579, 834, 813, 849, 846, 800, 845, 820, 838, 821, 804, 799, 684, 681, 856, 808, 843, 837, 829, 811, 847, 805, 832, 822, 827, 683, 682, 841, 803, 826, 851, 839, 801, 844, 853, 840, 807};
        data[0][3] = new int[]{6, 9, 17, 4, 80, 75, 758, 752, 754, 309, 306, 312, 310, 305, 302, 778, 768, 777, 304, 307, 311, 14, 23, 83, 764, 749, 759, 20, 78, 19, 7, 18, 13, 748, 775, 746, 313, 299, 767, 303, 301, 300, 308, 765, 5, 0, 11, 71, 72, 76, 766, 761, 769, 16, 81, 77, 1, 8, 22, 747, 763, 750, 2, 74, 10, 755, 760, 762, 751, 776, 772, 774, 771, 757, 21, 24, 15, 3, 12, 82, 773, 770, 756, 79, 70, 745, 25, 69, 73, 26, 753};
        data[0][4] = new int[]{};

        data[1][0] = new int[]{253, 249, 713, 703, 699, 737, 698, 700, 706, 702, 741, 732, 695, 258, 250, 717, 738, 731, 720, 725, 736, 724, 707, 719, 735, 740, 257, 252, 743, 708, 709, 744, 705, 692, 704, 697, 712, 722, 730, 256, 255, 727, 701, 711, 696, 693, 714, 739, 694, 718, 723, 715, 251, 254, 742, 710, 733, 728, 726, 721, 734, 716, 691, 729};
        data[1][1] = new int[]{586, 649, 651, 685, 547, 647, 787, 798, 793, 686, 687, 645, 585, 546, 646, 788, 790, 780, 545, 650, 644, 648, 643, 652, 783, 779, 796, 587, 689, 548, 584, 690, 549, 782, 794, 786, 688, 583, 789, 582, 792, 791, 795, 781, 785, 784, 797};
        data[1][2] = new int[]{683, 578, 848, 823, 819, 799, 815, 844, 856, 845, 814, 809, 849, 581, 681, 838, 826, 822, 808, 811, 831, 800, 835, 839, 833, 810, 580, 684, 842, 825, 832, 847, 821, 837, 846, 802, 817, 853, 816, 579, 682, 829, 828, 807, 820, 834, 843, 803, 806, 836, 801, 830, 841, 818, 850, 813, 851, 824, 855, 854, 852, 804, 812, 827, 840, 805};
        data[1][3] = new int[]{1, 83, 73, 23, 17, 76, 757, 774, 752, 5, 70, 78, 20, 12, 82, 755, 773, 763, 311, 312, 309, 75, 15, 13, 767, 764, 762, 301, 310, 307, 304, 302, 306, 746, 745, 766, 305, 303, 775, 299, 313, 300, 308, 754, 9, 71, 80, 11, 26, 16, 749, 748, 777, 24, 8, 69, 7, 14, 19, 771, 756, 747, 21, 72, 81, 3, 74, 18, 750, 761, 765, 6, 2, 22, 770, 760, 759, 753, 768, 778, 776, 769, 751, 79, 0, 772, 25, 4, 10, 77, 758};
        data[1][4] = new int[]{};

        data[2][0] = new int[]{255, 249, 742, 708, 733, 697, 713, 744, 724, 725, 740, 705, 716, 256, 258, 691, 735, 693, 704, 698, 741, 732, 739, 743, 719, 714, 252, 253, 694, 722, 703, 710, 700, 701, 720, 730, 706, 702, 728, 250, 254, 695, 712, 737, 736, 718, 696, 738, 721, 692, 723, 727, 257, 251, 729, 731, 717, 699, 711, 726, 715, 709, 734, 707};
        data[2][1] = new int[]{643, 650, 585, 652, 685, 687, 798, 786, 789, 545, 549, 584, 647, 586, 547, 790, 793, 785, 546, 651, 690, 645, 583, 582, 791, 788, 797, 587, 689, 688, 686, 794, 784, 783, 779, 787, 781, 796, 646, 548, 795, 644, 649, 648, 782, 780, 792};
        data[2][2] = new int[]{579, 578, 855, 819, 813, 801, 854, 840, 832, 856, 820, 800, 842, 682, 581, 833, 835, 807, 824, 799, 821, 814, 811, 850, 848, 803, 684, 580, 808, 838, 809, 804, 806, 823, 817, 852, 839, 827, 836, 683, 681, 849, 818, 853, 822, 844, 837, 805, 826, 825, 847, 834, 851, 829, 845, 843, 831, 802, 815, 830, 810, 812, 846, 816, 828, 841};
        data[2][3] = new int[]{303, 308, 306, 312, 301, 309, 778, 759, 747, 299, 304, 305, 311, 307, 310, 748, 755, 757, 11, 12, 22, 773, 766, 751, 761, 777, 760, 764, 756, 749, 70, 8, 6, 0, 14, 25, 767, 746, 770, 300, 302, 745, 313, 82, 1, 10, 776, 19, 26, 69, 16, 75, 24, 771, 772, 768, 73, 80, 71, 77, 72, 7, 775, 753, 762, 74, 21, 5, 83, 76, 9, 752, 758, 774, 20, 3, 2, 4, 13, 18, 763, 750, 769, 15, 23, 765, 81, 79, 17, 78, 754};
        data[2][4] = new int[]{442, 50, 409, 358, 295, 416, 431, 508, 1026, 110, 519, 920, 64, 662, 909, 137, 67, 961, 659, 325, 1038, 101, 509, 389, 482, 209, 357, 871, 131, 348, 1168, 653, 60, 958, 89, 233, 228, 177, 151, 444, 376, 104, 273, 398, 116, 515, 263, 413, 533, 150, 553, 394, 415, 51, 58, 443, 341, 883, 102, 338, 331, 454, 270, 466, 397, 526, 1220, 453, 631, 363, 170, 327, 623, 1141, 283, 260, 441, 570, 881, 432, 673, 1219, 234, 85, 347, 172, 952, 657, 660, 558, 61, 332, 563, 418, 217, 345, 658, 656, 607, 440, 118, 359, 433, 346, 406, 616, 40, 916, 437, 333, 169, 554, 1131, 179, 66, 147, 141, 919, 163, 65, 867, 293, 399, 153, 618, 1211, 674, 223, 966, 396, 606, 1115, 122, 232, 428, 164, 1103, 516, 382, 945, 275, 564, 882, 525, 484, 262, 296, 555, 639, 342, 371, 543, 886, 119, 386, 99, 340, 445, 400, 87, 640, 1071, 438, 517, 1227, 539, 222, 1212, 328, 144, 97, 109, 465, 361, 452, 155, 96, 392, 391, 664, 1232, 111, 422, 402, 421, 230, 178, 676, 380, 1194, 129, 520, 374, 330, 379, 329, 446, 207, 387, 490, 950, 541, 370, 1182, 569, 381, 1117, 667, 571, 1000, 1160, 227, 602, 1111, 669, 138, 1088, 987, 434, 542, 279, 38, 474, 231, 654, 226, 1108, 923, 1025, 936, 510, 84, 926, 354, 168, 1041, 1044, 1035, 1060, 672, 282, 1113, 171, 146, 1129, 957, 903, 932, 121, 412, 665, 274, 1116, 927, 1028, 943, 140, 149, 1059, 390, 162, 1056, 261, 185, 28, 1191, 528, 485, 1034, 1001, 1181, 866, 52, 522, 1072, 642, 610, 592, 1067, 1093, 941, 175, 246, 287, 123, 1099, 1147, 978, 297, 351, 605, 32, 1036, 1203, 884, 1226, 188, 514, 964, 529, 135, 1004, 538, 863, 461, 197, 1119, 37, 136, 1112, 1213, 991, 245, 473, 677, 620, 636, 873, 1216, 1082, 174, 496, 875, 498, 318, 1201, 908, 1136, 1109, 127, 33, 191, 601, 506, 899, 1235, 1046, 247, 186, 419, 31, 203, 1137, 494, 679, 609, 633, 487, 992, 954, 1089, 970, 29, 597, 1031, 479, 463, 1098, 948, 1197, 486, 242, 594, 521, 593, 1188, 972, 955, 315, 436, 276, 48, 1100, 1061, 887, 238, 627, 336, 134, 462, 103, 326, 220, 468, 1084, 898, 1205, 291, 280, 334, 377, 1132, 1174, 1142, 57, 272, 93, 557, 942, 1186, 1054, 1083, 613, 100, 1228, 414, 184, 1064, 921, 983, 259, 588, 411, 133, 55, 488, 181, 59, 41, 1066, 1107, 868, 375, 481, 88, 408, 924, 1095, 1063, 344, 63, 534, 505, 603, 1165, 977, 1122, 552, 54, 962, 551, 426, 1047, 890, 1104, 986, 225, 556, 39, 219, 404, 36, 124, 241, 248, 985, 1196, 1048, 457, 53, 423, 196, 1190, 1145, 1224, 894, 429, 604, 1166, 503, 502, 512, 1206, 906, 982, 335, 600, 1154, 577, 34, 897, 925, 1183, 956, 236, 599, 455, 113, 596, 1080, 1086, 911, 1014, 999, 990, 1209, 1135, 1039, 1178, 857, 1193, 1163, 959, 1237, 1012, 1057, 880, 1106, 1094, 937, 917, 1229, 938, 1019, 1134, 877, 974, 1050, 1241, 1128, 1091, 1118, 905, 1022, 1217, 1079, 1065, 876, 902, 1177, 1027, 1148, 1184, 1238, 900, 566, 132, 1003, 403, 62, 944, 1085, 879, 918, 1139, 947, 1074, 896, 1210, 1171, 1146, 1020, 1140, 864, 1010, 1037, 1207, 30, 239, 574, 35, 861, 907, 995, 1006, 237, 126, 267, 537, 1068, 973, 1032, 1214, 621, 320, 997, 589, 199, 189, 1081, 1175, 971, 535, 464, 912, 480, 495, 915, 1092, 975, 1230, 458, 576, 435, 214, 198, 1017, 183, 281, 559, 366, 1179, 1199, 1102, 1231, 148, 365, 1121, 395, 565, 965, 1078, 967, 893, 450, 161, 910, 95, 105, 1114, 1169, 1202, 356, 518, 550, 289, 173, 1070, 1204, 1045, 368, 142, 98, 562, 1013, 671, 976, 477, 637, 1101, 324, 160, 892, 1192, 949, 1096, 373, 49, 130, 339, 1152, 889, 1087, 439, 86, 675, 668, 349, 963, 859, 1225, 666, 608, 670, 451, 165, 1167, 1110, 1138, 573, 221, 560, 638, 139, 120, 447, 94, 205, 156, 1234, 934, 939, 343, 614, 561, 271, 180, 1120, 1233, 979, 540, 90, 930, 405, 663, 1009, 946, 1016, 953, 417, 489, 166, 56, 988, 989, 891, 369, 624, 407, 364, 427, 240, 46, 527, 497, 187, 940, 860, 1215, 277, 322, 27, 43, 1164, 1189, 1176, 176, 595, 1170, 630, 493, 200, 1222, 928, 901, 284, 678, 1055, 536, 204, 626, 1007, 874, 1029, 266, 524, 264, 44, 501, 1172, 211, 294, 383, 91, 1162, 922, 968, 224, 360, 567, 655, 355, 1133, 1033, 929, 483, 661, 1221, 385, 92, 984, 1124, 1130, 384, 475, 154, 632, 872, 1077, 1018, 1125, 218, 504, 367, 212, 106, 513, 507, 612, 288, 456, 969, 1236, 994, 42, 470, 500, 469, 998, 1158, 1218, 1123, 352, 201, 1073, 190, 350, 914, 1024, 1105, 1151, 195, 619, 628, 215, 424, 1097, 1069, 981, 319, 202, 269, 265, 316, 117, 641, 1240, 182, 210, 858, 1150, 993, 448, 572, 996, 401, 393, 933, 1187, 1242, 143, 167, 869, 112, 159, 1208, 1159, 1223, 1156, 158, 378, 1062, 208, 410, 1200, 1051, 1005, 157, 617, 278, 467, 206, 476, 449, 229, 478, 1173, 1090, 1023, 298, 235, 635, 45, 1195, 1180, 1042, 1058, 372, 615, 935, 568, 290, 1043, 960, 1149, 1049, 499, 590, 1143, 1126, 471, 420, 1030, 904, 888, 362, 145, 388, 68, 292, 472, 321, 430, 286, 980, 1153, 870, 611, 268, 1127, 491, 598, 634, 951, 1011, 913, 314, 193, 1185, 680, 192, 530, 862, 1015, 1040, 128, 323, 194, 285, 885, 1239, 1052, 1157, 115, 492, 353, 425, 317, 108, 459, 523, 243, 1008, 1144, 1155, 895, 107, 625, 1076, 460, 47, 1021, 1161, 1243, 591, 125, 878, 531, 511, 532, 1198, 1053, 865, 575, 544, 629, 337, 152, 1002, 1075, 931, 622, 244, 213, 216, 114};

        data[3][0] = new int[]{256, 254, 733, 732, 727, 705, 741, 714, 743, 717, 707, 710, 691, 258, 253, 722, 696, 735, 737, 693, 699, 742, 723, 738, 695, 711, 251, 255, 724, 721, 728, 726, 697, 740, 730, 713, 700, 731, 719, 249, 250, 712, 720, 706, 694, 702, 744, 703, 739, 734, 692, 716, 257, 252, 736, 704, 729, 715, 708, 725, 701, 709, 718, 698};
        data[3][1] = new int[]{584, 646, 546, 652, 650, 585, 792, 795, 787, 549, 644, 685, 648, 686, 583, 793, 783, 791, 545, 547, 647, 582, 797, 785, 788, 780, 784, 798, 781, 649, 587, 690, 651, 586, 688, 796, 790, 794, 548, 645, 789, 687, 643, 689, 782, 779, 786};
        data[3][2] = new int[]{578, 581, 842, 819, 817, 833, 823, 831, 852, 824, 848, 814, 802, 855, 828, 850, 825, 809, 810, 836, 815, 806, 835, 854, 818, 830, 816, 812, 580, 579, 834, 813, 849, 846, 800, 845, 820, 838, 821, 804, 799, 684, 681, 856, 808, 843, 837, 829, 811, 847, 805, 832, 822, 827, 683, 682, 841, 803, 826, 851, 839, 801, 844, 853, 840, 807};
        data[3][3] = new int[]{6, 9, 17, 4, 80, 75, 758, 752, 754, 309, 306, 312, 310, 305, 302, 778, 768, 777, 304, 307, 311, 14, 23, 83, 764, 749, 759, 20, 78, 19, 7, 18, 13, 748, 775, 746, 313, 299, 767, 303, 301, 300, 308, 765, 5, 0, 11, 71, 72, 76, 766, 761, 769, 16, 81, 77, 1, 8, 22, 747, 763, 750, 2, 74, 10, 755, 760, 762, 751, 776, 772, 774, 771, 757, 21, 24, 15, 3, 12, 82, 773, 770, 756, 79, 70, 745, 25, 69, 73, 26, 753};
        data[3][4] = new int[]{};

        data[4][0] = new int[]{253, 249, 713, 703, 699, 737, 698, 700, 706, 702, 741, 732, 695, 258, 250, 717, 738, 731, 720, 725, 736, 724, 707, 719, 735, 740, 257, 252, 743, 708, 709, 744, 705, 692, 704, 697, 712, 722, 730, 256, 255, 727, 701, 711, 696, 693, 714, 739, 694, 718, 723, 715, 251, 254, 742, 710, 733, 728, 726, 721, 734, 716, 691, 729};
        data[4][1] = new int[]{586, 649, 651, 685, 547, 647, 787, 798, 793, 686, 687, 645, 585, 546, 646, 788, 790, 780, 545, 650, 644, 648, 643, 652, 783, 779, 796, 587, 689, 548, 584, 690, 549, 782, 794, 786, 688, 583, 789, 582, 792, 791, 795, 781, 785, 784, 797};
        data[4][2] = new int[]{683, 578, 848, 823, 819, 799, 815, 844, 856, 845, 814, 809, 849, 581, 681, 838, 826, 822, 808, 811, 831, 800, 835, 839, 833, 810, 580, 684, 842, 825, 832, 847, 821, 837, 846, 802, 817, 853, 816, 579, 682, 829, 828, 807, 820, 834, 843, 803, 806, 836, 801, 830, 841, 818, 850, 813, 851, 824, 855, 854, 852, 804, 812, 827, 840, 805};
        data[4][3] = new int[]{1, 83, 73, 23, 17, 76, 757, 774, 752, 5, 70, 78, 20, 12, 82, 755, 773, 763, 311, 312, 309, 75, 15, 13, 767, 764, 762, 301, 310, 307, 304, 302, 306, 746, 745, 766, 305, 303, 775, 299, 313, 300, 308, 754, 9, 71, 80, 11, 26, 16, 749, 748, 777, 24, 8, 69, 7, 14, 19, 771, 756, 747, 21, 72, 81, 3, 74, 18, 750, 761, 765, 6, 2, 22, 770, 760, 759, 753, 768, 778, 776, 769, 751, 79, 0, 772, 25, 4, 10, 77, 758};
        data[4][4] = new int[]{};

        data[5][0] = new int[]{255, 249, 742, 708, 733, 697, 713, 744, 724, 725, 740, 705, 716, 256, 258, 691, 735, 693, 704, 698, 741, 732, 739, 743, 719, 714, 252, 253, 694, 722, 703, 710, 700, 701, 720, 730, 706, 702, 728, 250, 254, 695, 712, 737, 736, 718, 696, 738, 721, 692, 723, 727, 257, 251, 729, 731, 717, 699, 711, 726, 715, 709, 734, 707};
        data[5][1] = new int[]{643, 650, 585, 652, 685, 687, 798, 786, 789, 545, 549, 584, 647, 586, 547, 790, 793, 785, 546, 651, 690, 645, 583, 582, 791, 788, 797, 587, 689, 688, 686, 794, 784, 783, 779, 787, 781, 796, 646, 548, 795, 644, 649, 648, 782, 780, 792};
        data[5][2] = new int[]{579, 578, 855, 819, 813, 801, 854, 840, 832, 856, 820, 800, 842, 682, 581, 833, 835, 807, 824, 799, 821, 814, 811, 850, 848, 803, 684, 580, 808, 838, 809, 804, 806, 823, 817, 852, 839, 827, 836, 683, 681, 849, 818, 853, 822, 844, 837, 805, 826, 825, 847, 834, 851, 829, 845, 843, 831, 802, 815, 830, 810, 812, 846, 816, 828, 841};
        data[5][3] = new int[]{303, 308, 306, 312, 301, 309, 778, 759, 747, 299, 304, 305, 311, 307, 310, 748, 755, 757, 11, 12, 22, 773, 766, 751, 761, 777, 760, 764, 756, 749, 70, 8, 6, 0, 14, 25, 767, 746, 770, 300, 302, 745, 313, 82, 1, 10, 776, 19, 26, 69, 16, 75, 24, 771, 772, 768, 73, 80, 71, 77, 72, 7, 775, 753, 762, 74, 21, 5, 83, 76, 9, 752, 758, 774, 20, 3, 2, 4, 13, 18, 763, 750, 769, 15, 23, 765, 81, 79, 17, 78, 754};
        data[5][4] = new int[]{442, 50, 409, 358, 295, 416, 431, 508, 1026, 110, 519, 920, 64, 662, 909, 137, 67, 961, 659, 325, 1038, 101, 509, 389, 482, 209, 357, 871, 131, 348, 1168, 653, 60, 958, 89, 233, 228, 177, 151, 444, 376, 104, 273, 398, 116, 515, 263, 413, 533, 150, 553, 394, 415, 51, 58, 443, 341, 883, 102, 338, 331, 454, 270, 466, 397, 526, 1220, 453, 631, 363, 170, 327, 623, 1141, 283, 260, 441, 570, 881, 432, 673, 1219, 234, 85, 347, 172, 952, 657, 660, 558, 61, 332, 563, 418, 217, 345, 658, 656, 607, 440, 118, 359, 433, 346, 406, 616, 40, 916, 437, 333, 169, 554, 1131, 179, 66, 147, 141, 919, 163, 65, 867, 293, 399, 153, 618, 1211, 674, 223, 966, 396, 606, 1115, 122, 232, 428, 164, 1103, 516, 382, 945, 275, 564, 882, 525, 484, 262, 296, 555, 639, 342, 371, 543, 886, 119, 386, 99, 340, 445, 400, 87, 640, 1071, 438, 517, 1227, 539, 222, 1212, 328, 144, 97, 109, 465, 361, 452, 155, 96, 392, 391, 664, 1232, 111, 422, 402, 421, 230, 178, 676, 380, 1194, 129, 520, 374, 330, 379, 329, 446, 207, 387, 490, 950, 541, 370, 1182, 569, 381, 1117, 667, 571, 1000, 1160, 227, 602, 1111, 669, 138, 1088, 987, 434, 542, 279, 38, 474, 231, 654, 226, 1108, 923, 1025, 936, 510, 84, 926, 354, 168, 1041, 1044, 1035, 1060, 672, 282, 1113, 171, 146, 1129, 957, 903, 932, 121, 412, 665, 274, 1116, 927, 1028, 943, 140, 149, 1059, 390, 162, 1056, 261, 185, 28, 1191, 528, 485, 1034, 1001, 1181, 866, 52, 522, 1072, 642, 610, 592, 1067, 1093, 941, 175, 246, 287, 123, 1099, 1147, 978, 297, 351, 605, 32, 1036, 1203, 884, 1226, 188, 514, 964, 529, 135, 1004, 538, 863, 461, 197, 1119, 37, 136, 1112, 1213, 991, 245, 473, 677, 620, 636, 873, 1216, 1082, 174, 496, 875, 498, 318, 1201, 908, 1136, 1109, 127, 33, 191, 601, 506, 899, 1235, 1046, 247, 186, 419, 31, 203, 1137, 494, 679, 609, 633, 487, 992, 954, 1089, 970, 29, 597, 1031, 479, 463, 1098, 948, 1197, 486, 242, 594, 521, 593, 1188, 972, 955, 315, 436, 276, 48, 1100, 1061, 887, 238, 627, 336, 134, 462, 103, 326, 220, 468, 1084, 898, 1205, 291, 280, 334, 377, 1132, 1174, 1142, 57, 272, 93, 557, 942, 1186, 1054, 1083, 613, 100, 1228, 414, 184, 1064, 921, 983, 259, 588, 411, 133, 55, 488, 181, 59, 41, 1066, 1107, 868, 375, 481, 88, 408, 924, 1095, 1063, 344, 63, 534, 505, 603, 1165, 977, 1122, 552, 54, 962, 551, 426, 1047, 890, 1104, 986, 225, 556, 39, 219, 404, 36, 124, 241, 248, 985, 1196, 1048, 457, 53, 423, 196, 1190, 1145, 1224, 894, 429, 604, 1166, 503, 502, 512, 1206, 906, 982, 335, 600, 1154, 577, 34, 897, 925, 1183, 956, 236, 599, 455, 113, 596, 1080, 1086, 911, 1014, 999, 990, 1209, 1135, 1039, 1178, 857, 1193, 1163, 959, 1237, 1012, 1057, 880, 1106, 1094, 937, 917, 1229, 938, 1019, 1134, 877, 974, 1050, 1241, 1128, 1091, 1118, 905, 1022, 1217, 1079, 1065, 876, 902, 1177, 1027, 1148, 1184, 1238, 900, 566, 132, 1003, 403, 62, 944, 1085, 879, 918, 1139, 947, 1074, 896, 1210, 1171, 1146, 1020, 1140, 864, 1010, 1037, 1207, 30, 239, 574, 35, 861, 907, 995, 1006, 237, 126, 267, 537, 1068, 973, 1032, 1214, 621, 320, 997, 589, 199, 189, 1081, 1175, 971, 535, 464, 912, 480, 495, 915, 1092, 975, 1230, 458, 576, 435, 214, 198, 1017, 183, 281, 559, 366, 1179, 1199, 1102, 1231, 148, 365, 1121, 395, 565, 965, 1078, 967, 893, 450, 161, 910, 95, 105, 1114, 1169, 1202, 356, 518, 550, 289, 173, 1070, 1204, 1045, 368, 142, 98, 562, 1013, 671, 976, 477, 637, 1101, 324, 160, 892, 1192, 949, 1096, 373, 49, 130, 339, 1152, 889, 1087, 439, 86, 675, 668, 349, 963, 859, 1225, 666, 608, 670, 451, 165, 1167, 1110, 1138, 573, 221, 560, 638, 139, 120, 447, 94, 205, 156, 1234, 934, 939, 343, 614, 561, 271, 180, 1120, 1233, 979, 540, 90, 930, 405, 663, 1009, 946, 1016, 953, 417, 489, 166, 56, 988, 989, 891, 369, 624, 407, 364, 427, 240, 46, 527, 497, 187, 940, 860, 1215, 277, 322, 27, 43, 1164, 1189, 1176, 176, 595, 1170, 630, 493, 200, 1222, 928, 901, 284, 678, 1055, 536, 204, 626, 1007, 874, 1029, 266, 524, 264, 44, 501, 1172, 211, 294, 383, 91, 1162, 922, 968, 224, 360, 567, 655, 355, 1133, 1033, 929, 483, 661, 1221, 385, 92, 984, 1124, 1130, 384, 475, 154, 632, 872, 1077, 1018, 1125, 218, 504, 367, 212, 106, 513, 507, 612, 288, 456, 969, 1236, 994, 42, 470, 500, 469, 998, 1158, 1218, 1123, 352, 201, 1073, 190, 350, 914, 1024, 1105, 1151, 195, 619, 628, 215, 424, 1097, 1069, 981, 319, 202, 269, 265, 316, 117, 641, 1240, 182, 210, 858, 1150, 993, 448, 572, 996, 401, 393, 933, 1187, 1242, 143, 167, 869, 112, 159, 1208, 1159, 1223, 1156, 158, 378, 1062, 208, 410, 1200, 1051, 1005, 157, 617, 278, 467, 206, 476, 449, 229, 478, 1173, 1090, 1023, 298, 235, 635, 45, 1195, 1180, 1042, 1058, 372, 615, 935, 568, 290, 1043, 960, 1149, 1049, 499, 590, 1143, 1126, 471, 420, 1030, 904, 888, 362, 145, 388, 68, 292, 472, 321, 430, 286, 980, 1153, 870, 611, 268, 1127, 491, 598, 634, 951, 1011, 913, 314, 193, 1185, 680, 192, 530, 862, 1015, 1040, 128, 323, 194, 285, 885, 1239, 1052, 1157, 115, 492, 353, 425, 317, 108, 459, 523, 243, 1008, 1144, 1155, 895, 107, 625, 1076, 460, 47, 1021, 1161, 1243, 591, 125, 878, 531, 511, 532, 1198, 1053, 865, 575, 544, 629, 337, 152, 1002, 1075, 931, 622, 244, 213, 216, 114};


        int _cr = -1;
        for(final Particle p : pso.getParticles())
        {
            ++_cr;
            int _cc = -1;
            for(final Position pp : p.getData().getPositions())
            {
                System.arraycopy(data[_cr][++_cc], 0, pp.getPosition(), 0, data[_cr][_cc].length);
            }
        }



        //this.printClusterClassroomMember();
        //this.printClusterGroupClassroomMember();
        //this.printParticleAsc(pso);
        //this.printParticlePosition(pso);
        for(@NotNull final Particle particle : pso.getParticles())
        {
            pso.repair(particle);
            pso.calculate(particle);
            particle.assignPBest();
        }
        pso.assignGBest();
        this.printParticleFitness(pso);
        for(@NotNull final Particle particle : pso.getParticles())
        {
            particle.calculateVelocity(pso.gBest, 1, 10000);
            pso.repair(particle);
            pso.calculate(particle);
            particle.updateData();
        }
        this.printParticleFitness(pso);

    }


    private void printClusterGroupClassroomMember()
    {
        final @NotNull Int2IntMap d0cr = dsLoader.getDecoder().getClassrooms();
        final @NotNull DSLesson[] lessons = dsLoader.getDataset().getLessons();
        for(final DSLessonCluster cls : dsLoader.getDataset().getLessonClusters())
        {
            final Int2IntMap d1cr = cls.getClassroomDecoder();
            for(final DSLessonGroup grp : cls.getLessonGroups())
            {
                System.out.print(Arrays.stream(grp.getLessons()).map(operand -> lessons[operand].getSks()).sum() + " " + Arrays.stream(grp.getClassrooms()).map(operand -> {
                    int val = 0;
                    for(@NotNull double[] _t : cls.getClassroomsTimeoff(operand).getTimeoff())
                    {
                        val += Arrays.stream(_t).filter(value -> value != 0.2).count();
                    }
                    return val;
                }).sum() + " ");
                System.out.println(grp.getLessons().length + " " + Arrays.toString(Arrays.stream(grp.getClassrooms()).map(operand -> d0cr.get(d1cr.get(operand))).toArray()));
            }
            System.out.println();
        }
    }

    private void printClusterClassroomMember()
    {
        final @NotNull Int2IntMap d0cr = dsLoader.getDecoder().getClassrooms();
        final @NotNull DSLesson[] lessons = dsLoader.getDataset().getLessons();

        for(final DSLessonCluster cls : dsLoader.getDataset().getLessonClusters())
        {
            final Int2IntMap d1cr = cls.getClassroomDecoder();
            System.out.print(Arrays.stream(cls.getLessons()).map(operand -> lessons[operand].getSks()).sum() + " " + Arrays.stream(cls.getClassrooms()).map(operand -> {
                int val = 0;
                for(@NotNull double[] _t : cls.getClassroomsTimeoff(operand).getTimeoff())
                {
                    val += Arrays.stream(_t).filter(value -> value != 0.2).count();
                }
                return val;
            }).sum() + " ");
            System.out.println(cls.getLessonTotal() + " " + cls.getLessonNullTotal() + " " + Arrays.toString(Arrays.stream(cls.getClassrooms()).map(operand -> d0cr.get(d1cr.get(operand))).toArray()));
        }
    }

    private void printParticleAsc(@NotNull PSO pso)
    {
        for(final Particle p : pso.getParticles())
        {
            for(final Position pp : p.getData().getPositions())
            {
                Arrays.stream(pp.getPosition()).sorted().forEach(value -> System.out.printf("%d\t", value));
                System.out.println();
            }
            System.out.println();
        }
    }


    private void printParticlePosition(@NotNull PSO pso)
    {
        for(final Particle p : pso.getParticles())
        {
            for(final Position pp : p.getData().getPositions())
            {
                for(int i = -1, is = 8; ++i < is;)
                {
                    System.out.printf("%d", pp.getPosition()[i]);
                    System.out.printf("\t");
                }
                System.out.printf("⋯");
                System.out.printf("\t");
                System.out.printf("%d\n", pp.getPosition()[pp.getPositionSize()-1]);
                /*
                //System.out.println(Arrays.toString(pp.getPosition()));
                Arrays.stream(pp.getPosition()).forEach(value -> System.out.printf("%d\t", value));
                System.out.println();*/
            }
            System.out.println();
        }
    }


    private void printParticleFitness(@NotNull final PSO pso)
    {
        for(final Particle p : pso.getParticles())
        {
            System.out.printf("%f\n", p.getFitness());
        }
    }

    private void printParticlePBestFitness(@NotNull final PSO pso)
    {
        for(final Particle p : pso.getParticles())
        {
            System.out.printf("%f\n", p.getPBest().getFitness());
        }
    }

}
